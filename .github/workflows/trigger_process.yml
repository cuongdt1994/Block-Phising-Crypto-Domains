name: Scheduled Script Execution

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"

jobs:
  download-and-process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Download domains file
        run: |
          cat << 'EOF' > process_domains.py
          import os
          import json
          import requests

          # Download files from repo
          scamsniffer = 'https://raw.githubusercontent.com/scamsniffer/scam-database/refs/heads/main/blacklist/domains.json'
          response = requests.get(scamsniffer)
          if response.status_code == 200:
              with open('domains.json', 'wb') as json_file:
                  json_file.write(response.content)
          metammask = 'https://raw.githubusercontent.com/MetaMask/eth-phishing-detect/refs/heads/main/src/config.json'
          response = requests.get(metammask)
          if response.status_code == 200:
              with open('config.json', 'wb') as json_file:
                  json_file.write(response.content)
          # Read JSON files
          with open('domains.json', 'r') as domains_file:
              domains_data = json.load(domains_file)
          with open('config.json', 'r') as config_file:
              config_data = json.load(config_file)    

          # Process and Merge JSON files
          blacklist_urls = config_data.get('blacklist', [])
          
          # Write output to a text file
          os.makedirs('lists', exist_ok=True)
          os.makedirs('dist', exist_ok=True)
          with open(dist/config.txt, 'w') as txt_file:
              for url in blacklist_urls:
                  txt_file.write(url + '\n')
          with open('domains.txt', 'w') as output_file:
              for url in data:
                  output_file.write(f"0.0.0.0 {url}\n")
                  
          EOF
          python process_domains.py
      - name: Move output files
        run: |
          mv config.txt lists/daily
          mv domains.txt lists/daily
      - name: Clean up untracked files
        run: |
          rm -f domains.json process_domains.py config.json
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add lists
          if ! git diff --cached --quiet; then
             git commit -m "Update Blocklist Phising Site Lists ($(date +'%Y-%m-%d'))"
             git push
          else
            echo "No changes to commit."
          fi
        env:
          TANA: ${{ secrets.GITHUB_TOKEN }}
